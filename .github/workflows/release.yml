name: Release

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        target: [x86_64-apple-darwin]

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Install dependencies
      run: sudo apt-get install -y cmake

    - name: Set up osxcross
      run: |
        git clone https://github.com/tpoechtrager/osxcross.git
        cd osxcross
        wget https://github.com/phracker/MacOSX-SDKs/releases/download/11.3/MacOSX11.3.sdk.tar.xz
        mkdir tarballs
        mv MacOSX11.3.sdk.tar.xz tarballs/
        UNATTENDED=yes OSX_VERSION_MIN=10.7 ./build.sh

    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Install macOS target
      run: rustup target add ${{ matrix.target }}

    - name: Build
      env:
        PATH: /home/runner/osxcross/target/bin:$PATH
      run: |
        export CC=o64-clang
        export CXX=o64-clang++
        cargo build --release --target ${{ matrix.target }}

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: release-binaries-${{ matrix.target }}
        path: target/${{ matrix.target }}/release/

  release:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: release-binaries-x86_64-apple-darwin
        path: binaries/macos

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: binaries/macos/your_binary_name
        asset_name: your_binary_name
        asset_content_type: application/octet-stream
